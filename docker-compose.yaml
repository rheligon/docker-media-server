services:
  # VIEWER
  plex:
    image: lscr.io/linuxserver/plex:1.40.2
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - VERSION=docker
    volumes:
      - ${APP_PATH}/plex:/config
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH}/movies:/movies
      - ${MEDIA_PATH}/anime:/anime
      - ${MEDIA_PATH}/music:/music
    restart: unless-stopped
  # INDEXER
  prowlarr:
      container_name: prowlarr
      image: ghcr.io/hotio/prowlarr:latest
      restart: unless-stopped
      logging:
        driver: json-file
      ports:
        - ${PROWLARR_PORT}:9696
      environment:
        - PUID=${PGID}
        - PGID=${PGID}
        - TZ=${TIMEZONE}
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${APP_PATH}/prowlarr:/config
  # CLOUDFLARE DNS CHALLENGE SOLVER
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped 
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - ${FLARESOLVERR_PORT}:8191
  # SONARR ANIME
  sonarr-anime:
    container_name: sonarr-anime
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - ${SONARR_ANIME_PORT}:8989
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APP_PATH}/sonarr-anime:/config
      - ${DATA_PATH}:/data
  # SONARR TV
  sonarr-tv:
    container_name: sonarr-tv
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - ${SONARR_TV_PORT}:8989
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APP_PATH}/sonarr-tv:/config
      - ${DATA_PATH}:/data
  # BAZARR
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:latest
    ports:
      - ${BAZARR_PORT}:6767
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORTS=${BAZARR_PORT}/tcp,${BAZARR_PORT}/udp
    volumes:
      - ${APP_PATH}/bazarr:/config
      - ${DATA_PATH}:/data
  # RADARR
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - ${RADARR_PORT}:7878
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APP_PATH}/radarr:/config
      - ${DATA_PATH}:/data
  # QBITTORRENT
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: "service:gluetun"
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=${QBITT_PORT_UI}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${APP_PATH}/qbittorrent:/config
      - ${DATA_PATH}/torrents:/data/torrents
  # GLUETUN
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - ${QBITT_PORT}:6881 # qbittorrent
      - ${QBITT_PORT}:6881/udp # qbittorrent
      - ${QBITT_PORT_UI}:8080 # qbittorrent
      # - ${SABNZDB_PORT}:8085 # sabnzdb
    volumes:
      - ${APP_PATH}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - SERVER_REGIONS=${VPN_REGION}
      - TZ=${TIMEZONE}
      - UPDATER_PERIOD=24h